swagger: 2
info:
  version: 0.0.1
  title: Eats - A Sample App
host: localhost
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
x-volos-resources:
  cache:
    provider: volos-cache-memory
    options:
      name: name
      ttl: 10000
  quota:
    provider: volos-quota-memory
    options:
      timeUnit: hour
      interval: 1
      allow: 2
paths:
  /hello:
    x-swagger-router-controller: hello_world
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: "Returns 'Hello' to the caller"
      operationId: hello
      produces:
        - application/json
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema: {}
        default:
          description: Error
          schema: {}
  /restaurants:
    x-swagger-router-controller: restaurants
    x-volos-authorizations: {}
    x-volos-apply:
      cache: []
      quota: []
    get:
      description: Returns a list of restaurants
      operationId: getRestaurants
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema: {}
        default:
          description: Error
          schema: {}
  /restaurants/{id}:
    x-swagger-router-controller: restaurants
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a single restaurant and its reviews
      operationId: getRestaurantByID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: The restID of the restaurant to select
          required: true
          type: number
      responses:
        "200":
          description: Success
          schema: {}
        "404":
          description: Restaurant not found
          schema: {}
        "500":
          description: Invalid restaurant ID supplied
          schema: {}
        default:
          description: Error
          schema: {}
  /reviews:
    x-swagger-router-controller: reviews
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a list of reviews
      operationId: getReviews
      produces:
        - application/json
      parameters:
        - name: restID
          in: query
          description: Get reviews for a specific restaurant
          required: false
          type: number
        - name: rating
          in: query
          description: Get reviews with a specific rating
          required: false
          type: number
        - name: reviewer
          in: query
          description: Get reviews by a specific user
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema: {}
        default:
          description: Error
          schema: {}
    post:
      x-volos-apply:
        quota: []
      description: Posts a new review
      operationId: postReview
      parameters:
        - name: body
          in: body
          description: Post review and rating
          required: false
          schema: 
            $ref: "#/definitions/Review"
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema: {}
        default:
          description: Error
          schema: {}
  /users:
    x-swagger-router-controller: users
    x-volos-authorizations: {}
    x-volos-apply:
      cache: []
    get:
      description: Returns a list of users
      operationId: getUsers
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema: {}
        default:
          description: Error
          schema: {}
  /users/{username}:
    x-swagger-router-controller: users
    x-volos-authorizations: {}
    x-volos-apply: {}
    get:
      description: Returns a single user
      operationId: getUserByID
      produces:
        - application/json
      parameters:
        - name: username
          in: path
          description: The username of the user
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema: {}
        default:
          description: Error
          schema: {}
definitions:
  Review:
    properties:
      title:
        type: string
      restID:
        type: integer
      rating:
        type: integer
      reviewer:
        type: string
      body:
        type: string
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string